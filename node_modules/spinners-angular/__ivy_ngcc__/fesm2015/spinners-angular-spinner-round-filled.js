import { Component, NgModule } from '@angular/core';
import { SpinnerComponent } from 'spinners-angular/spinners-utils';
import { BrowserModule } from '@angular/platform-browser';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function SpinnerRoundFilledComponent__svg_svg_0__svg_circle_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelement(0, "circle", 3);
} if (rf & 2) {
    const animation_r2 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("ngStyle", ctx_r1.circleStyle(animation_r2));
    ɵngcc0.ɵɵattribute("r", ctx_r1.radius(animation_r2));
} }
function SpinnerRoundFilledComponent__svg_svg_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵnamespaceSVG();
    ɵngcc0.ɵɵelementStart(0, "svg", 1);
    ɵngcc0.ɵɵtemplate(1, SpinnerRoundFilledComponent__svg_svg_0__svg_circle_1_Template, 1, 2, "circle", 2);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngStyle", ctx_r0.svgStyle);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r0.animations);
} }
class SpinnerRoundFilledComponent extends SpinnerComponent {
    constructor() {
        super(...arguments);
        this.animations = [
            { r: 4 },
            {
                name: 'spinners-angular-round-filled-inner',
                r: 12.66,
            },
            {
                name: 'spinners-angular-round-filled-center',
                r: 20.32,
            },
            {
                name: 'spinners-angular-round-filled-outer',
                r: 27.5,
            },
        ];
    }
    circleStyle(animation) {
        return {
            opacity: animation.name ? 0.25 : 1,
            transformOrigin: 'center',
            animation: (!animation.name || this.still)
                ? 'none'
                : `${animation.name} ${140 / this.speed}s ease-in-out infinite`,
        };
    }
    radius(animation) {
        return animation.r * (animation.name ? (this.thickness / 100) : 1);
    }
}
SpinnerRoundFilledComponent.ɵfac = /*@__PURE__*/ function () { let ɵSpinnerRoundFilledComponent_BaseFactory; return function SpinnerRoundFilledComponent_Factory(t) { return (ɵSpinnerRoundFilledComponent_BaseFactory || (ɵSpinnerRoundFilledComponent_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(SpinnerRoundFilledComponent)))(t || SpinnerRoundFilledComponent); }; }();
SpinnerRoundFilledComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SpinnerRoundFilledComponent, selectors: [["sa-spinner-round-filled"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [["fill", "none", "viewBox", "0 0 66 66", 3, "ngStyle", 4, "ngIf"], ["fill", "none", "viewBox", "0 0 66 66", 3, "ngStyle"], ["cx", "33", "cy", "33", "fill", "currentColor", 3, "ngStyle", 4, "ngFor", "ngForOf"], ["cx", "33", "cy", "33", "fill", "currentColor", 3, "ngStyle"]], template: function SpinnerRoundFilledComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, SpinnerRoundFilledComponent__svg_svg_0_Template, 2, 2, "svg", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.enabled);
    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgStyle, ɵngcc1.NgForOf], styles: ["@-webkit-keyframes spinners-angular-round-filled-outer{40%,60%{transform:scale(0)}}@keyframes spinners-angular-round-filled-outer{40%,60%{transform:scale(0)}}@-webkit-keyframes spinners-angular-round-filled-center{30%,70%{transform:scale(0)}}@keyframes spinners-angular-round-filled-center{30%,70%{transform:scale(0)}}@-webkit-keyframes spinners-angular-round-filled-inner{20%,80%{transform:scale(0)}}@keyframes spinners-angular-round-filled-inner{20%,80%{transform:scale(0)}}"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SpinnerRoundFilledComponent, [{
        type: Component,
        args: [{
                selector: 'sa-spinner-round-filled',
                template: "<svg *ngIf=\"enabled\" fill=\"none\" [ngStyle]=\"svgStyle\" viewBox=\"0 0 66 66\">\r\n  <circle\r\n    *ngFor=\"let animation of animations\"\r\n    cx=\"33\"\r\n    cy=\"33\"\r\n    fill=\"currentColor\"\r\n    [attr.r]=\"radius(animation)\"\r\n    [ngStyle]=\"circleStyle(animation)\"\r\n  />\r\n</svg>\r\n",
                styles: ["@-webkit-keyframes spinners-angular-round-filled-outer{40%,60%{transform:scale(0)}}@keyframes spinners-angular-round-filled-outer{40%,60%{transform:scale(0)}}@-webkit-keyframes spinners-angular-round-filled-center{30%,70%{transform:scale(0)}}@keyframes spinners-angular-round-filled-center{30%,70%{transform:scale(0)}}@-webkit-keyframes spinners-angular-round-filled-inner{20%,80%{transform:scale(0)}}@keyframes spinners-angular-round-filled-inner{20%,80%{transform:scale(0)}}\n"]
            }]
    }], null, null); })();

class SpinnerRoundFilledModule {
}
SpinnerRoundFilledModule.ɵfac = function SpinnerRoundFilledModule_Factory(t) { return new (t || SpinnerRoundFilledModule)(); };
SpinnerRoundFilledModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: SpinnerRoundFilledModule });
SpinnerRoundFilledModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[BrowserModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SpinnerRoundFilledModule, [{
        type: NgModule,
        args: [{
                imports: [BrowserModule],
                declarations: [SpinnerRoundFilledComponent],
                exports: [SpinnerRoundFilledComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SpinnerRoundFilledModule, { declarations: function () { return [SpinnerRoundFilledComponent]; }, imports: function () { return [BrowserModule]; }, exports: function () { return [SpinnerRoundFilledComponent]; } }); })();

/**
 * Generated bundle index. Do not edit.
 */

export { SpinnerRoundFilledComponent, SpinnerRoundFilledModule };

//# sourceMappingURL=spinners-angular-spinner-round-filled.js.map